-- Used a dataset called Chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers
-- Used this dataset to answer the following questions

-- Show Customers (their full names, customer ID, and country) who are not in the US
SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE country <> 'USA';

-- Show only the Customers from Brazil
SELECT *
FROM customers
WHERE country = 'Brazil';

-- Find the Invoices of customers who are from Brazil
-- The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE country = 'Brazil';

-- Show the Employees who are Sales Agents
SELECT *
FROM employees
WHERE title LIKE 'Sales Support Agent';

-- Find a unique/distinct list of billing countries from the Invoice table
SELECT distinct BillingCountry
FROM invoices
ORDER BY BillingCountry;

-- Provide a query that shows the invoices associated with each sales agent
-- The resulting table should include the Sales Agent's full name
SELECT emp.FirstName, emp.LastName, inv.InvoiceId
FROM employees emp
JOIN customers cust
ON cust.SupportRepId = emp.EmployeeID
JOIN invoices inv
ON inv.CustomerId = cust.CustomerId;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers
SELECT inv.Total, cust.FirstName, cust.LastName, cust.Country, emp.FirstName, emp.LastName 
FROM employees emp
JOIN customers cust
ON cust.SupportRepId = emp.EmployeeID
JOIN invoices inv
ON inv.CustomerId = cust.CustomerId;

-- How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

-- What are the total sales for 2009?
SELECT SUM(total) as total_sales
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- Write a query that includes the purchased track name with each invoice line ID
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID
SELECT artists.Name AS 'artist_name', tracks.Name AS 'track_name', invoice_items.InvoiceLineId
FROM invoice_items
LEFT JOIN tracks
ON tracks.TrackId = invoice_items.TrackId
INNER JOIN albums
ON albums.AlbumId = tracks.AlbumId
LEFT JOIN artists
ON artists.ArtistId = albums.ArtistId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre
SELECT tracks.Name, albums.Title, media_types.Name AS 'media_type', genres.Name AS 'genre'
FROM tracks
JOIN albums
ON albums.AlbumId = tracks.AlbumId
JOIN media_types
ON media_types.MediaTypeId = tracks.MediaTypeId
JOIN genres
ON genres.GenreId = tracks.GenreId;

-- Show the total sales made by each sales agent
SELECT ROUND(SUM(invoices.Total), 2) AS 'total_sales', employees.LastName, employees.FirstName, employees.EmployeeId
FROM invoices
JOIN customers
ON customers.CustomerId = invoices.CustomerId
JOIN employees
ON employees.EmployeeId = customers.SupportRepId
GROUP BY employees.FirstName
HAVING employees.title = 'Sales Support Agent'
ORDER BY total_sales DESC;

-- Which sales agent made the most dollars in sales in 2009?
SELECT ROUND(SUM(invoices.Total), 2) AS 'total_sales', employees.FirstName, employees.LastName, employees.EmployeeId
FROM employees
JOIN customers
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices
ON invoices.CustomerId = customers.CustomerId
WHERE invoices.InvoiceDate LIKE '2009%' 
AND employees.Title = 'Sales Support Agent'
GROUP BY employees.FirstName
ORDER BY total_sales  DESC LIMIT 1;
